Ayam
1.25
0
35
1
0
1
1
0
1

0
1
2
685
# bendcur.tcl: example script for Ayam Script object
# this script wants Script Object Type "Modify"
# and deforms a curve based on the shape of a
# second curve
withOb 0 do {getProp}
set length $NCurveAttrData(Length)
withOb 1 do {getProp}
set umin [lindex $NCurveAttrData(Knots)\
    [expr {$NCurveAttrData(Order) - 1}]]
set umax [lindex $NCurveAttrData(Knots)\
    $NCurveAttrData(Length)]
set ud [expr {($umax-$umin)/($length-1)}]
set u 0.0
for {set i 0} {$i < $length} {incr i} {
    withOb 1 do {getPnt -p $u sx sy sz sw}
    withOb 0 do {getPnt $i x y z w}
    set y [expr {$y + $sy}]
    withOb 0 do {setPnt $i $x $y $z $w}
    set u [expr {$u + $ud}]
}
# for

# bendcur.tcl



0
35
0
0
1
1
0
1

1
NP
HelixAttr
1
1
1017
# Ayam, save array: HelixAttrData
# helix.tcl: example script for Ayam Script object
# this script wants Script Object Type "Create" and creates
# a helix NURBS curve; it also has a property GUI, just
# add a tag "NP HelixAttr" to the script object to see it
if { ![info exists ::HelixAttrData] } {
    array set ::HelixAttrData {
	Length 30
	Angle 45.0
	Radius 2.0
	DZ 0.25
	SP {Length Radius Angle DZ}
    }
}
if { ![info exists ::HelixAttrGUI] } {
    set w [addPropertyGUI HelixAttr "" ""]
    set a HelixAttrData
    addParam $w $a Length
    addParam $w $a Radius
    addParam $w $a Angle
    addParam $w $a DZ
}

set l $::HelixAttrData(Length)
set r $::HelixAttrData(Radius)
set ad [expr $::HelixAttrData(Angle)*acos(-1)/180.0]
set zd $::HelixAttrData(DZ)

crtOb NCurve -kt 1 -length $l;sL
set a 0.0
set z 0.0
for {set i 0} {$i < $l} {incr i} {
    set x [expr {$r*cos($a)}]
    set y [expr {$r*sin($a)}]
    setPnt $i $x $y $z 1.0
    set a [expr {$a + $ad}]
    set z [expr {$z + $zd}]
}
# for

# helix.tcl


5
SP
Length Radius Angle DZ
Length
60
Radius
2.0
Angle
45.0
DZ
0.125
0
2
0
0
0
1
0
0

0
7
4
2
0 0 0 1
0 0 1.125 1
0 1.5 2.25 1
0 2.25 3.5 1
0 1.5 5 1
0 0 6 1
0 0 7 1
0
0
0
1
0
3
0
0
0
1
0
0

0
0
